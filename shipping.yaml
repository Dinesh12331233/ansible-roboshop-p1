- name: configuring shipping component 
  hosts: shipping 
  become: yes 
  tasks: 
  - name: installing maven 
    ansible.builtin.package: 
      name: maven 
      state: present 

  - name: create a system user 
    ansible.builtin.user: 
      system: true 
      home: /app 
      shell: /sbin/nologin 
      name: roboshop 

  - name: create a app directory 
    ansible.builtin.file: 
      path: /app 
      state: directory 

  - name: download application code 
    ansible.builtin.get_url: 
      url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip 
      dest: /tmp/shipping.zip 

  - name: unzipping the application code 
    ansible.builtin.unarchive: 
      src: /tmp/shipping.zip
      dest: /app 
      remote_src: yes 

  - name: installing dependencies 
    args: 
      chdir: /app 
    ansible.builtin.command: mvn clean package  

  - name: renaming a file 
    args: 
      chdir: /app 
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar

  - name: copy shipping.service to remote server 
    ansible.builtin.copy: 
      src: shipping.service 
      dest: /etc/systemd/system/shipping.service 

  - name: daemon_reload the service 
    ansible.builtin.systemd_service:
      daemon_reload: true      

  - name: start and enable service 
    ansible.builtin.service:
      name: shipping 
      state: started 
      enabled: yes 

  - name: install mysql 
    ansible.builtin.package: 
      name: mysql 
      state: present 

  - name: load schema 
    ansible.builtin.shell: mysql -h mysql.deepthi.tech -uroot -pRoboShop@1 < /app/db/schema.sql  

  - name: create app user 
    ansible.builtin.shell: mysql -h mysql.deepthi.tech -uroot -pRoboShop@1 < /app/db/app-user.sql  

  - name: load master data 
    ansible.builtin.shell: mysql -h mysql.deepthi.tech -uroot -pRoboShop@1 < /app/db/master-data.sql     

  - name: restart shipping 
    ansible.builtin.service: 
      name: shipping 
      state: restarted           

